version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: node.Dockerfile
    image: node:lts-alpine
    container_name: node
    depends_on: 
      - mongodb
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=mongodb
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - NODE_HOSTNAME=node
      - NODE_PORT=8080
    ports:
      - "443:8080"
    volumes:
      - ./src:/srv/app/src
    networks:
      - app-network  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - "27017:27017"
    volumes:  
      - data:/srv/app/data/mongodb
    networks:
      - app-network
  mongoexpress:
    image: mongo-express:latest
    container_name: mongo-express
    depends_on: 
      - mongodb
    restart: unless-stopped
    env_file:
      - ./.env
    environment: 
      - ME_CONFIG_BASICAUTH_USERNAME=$ME_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD=$ME_PASSWORD
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_USERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_PASSWORD
      - ME_CONFIG_MONGODB_PORT=$MONGO_PORT
      - ME_CONFIG_MONGODB_SERVER=mongodb
    ports:
      - "8081:8081"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  data: